
   BASEDIR=`readlink -f $0   | #
            rev              | #
            cut -d "/" -f 2- | #
            rev`

    TWACCOUNT=`find $BASEDIR -name "twitter.account" | head -n 1`
   TWUSERNAME=`cat $TWACCOUNT | grep "username" | cut -d ":" -f 2`
    TWURLLOCK="/tmp/twurl.lock"

# --------------------------------------------------------------------------- #
   function setdefaultuserandtweet() {

     CCNT=0
     while [ `ps aux | grep twurl | #
              grep -v grep | wc -l` -gt 0 ] ||
           [ -f $TWURLLOCK ] && [ $CCNT -lt 1000 ]
      do
            COLLISION=`ps axo command | #
                       grep twurl | grep -v grep | #
                       sed ':a;N;$!ba;s/\n/, /g'`
            WHEN=`date "+%d.%m.%Y %H:%M:%S"`
            if [ `echo $COLLISION | wc -c` -gt 1 ];then
            echo "WAITING (${WHEN} -> ${COLLISION})" >> ${TMP}.collision.log
            fi
            if  [ -f $TWURLLOCK ];then
            LOCKMESSAGE="twurllock: "`cat $TWURLLOCK`
            echo "WAITING (${WHEN} -> $LOCKMESSAGE)" >> ${TMP}.collision.log
            fi
            sleep 5
            CCNT=`expr $CCNT + 1`
            if [ $CCNT -ge 100 ]; then
                 echo '"errors": EXIT BY TWURL LOCK!' | tee -a ${TMP}.collision.log
                 UNLOCK="NOT";exit 1;
            fi
     done
           if [ "$UNLOCK" != "NOT" ]; then
                 echo "$TWUSERNAME" > $TWURLLOCK
                 /usr/local/bin/twurl set default $TWUSERNAME
                 sleep 2
                 EVALTHIS="/usr/local/bin/twurl $*"
                 eval $EVALTHIS
                 rm $TWURLLOCK;
           else
                 exit 1;
           fi
   }

   TWURL="setdefaultuserandtweet"

# --------------------------------------------------------------------------- #
  function tweet(){
  
    UPDATE="/1.1/statuses/update.json" # TODO?: MOVE OUTSIDE ?

    FLAGS=`echo "$*" | #
           sed 's/ -.=[^ ]*\b/\n&/g' | #
           grep "^ -.=" | cut -d " " -f 2`
    ISREPLY=`echo $FLAGS | sed 's/ /\n/' | #
             grep -- "^-r" | #
             head -n 1 | cut -d "=" -f 2 | #
             sed 's/^[0-9]/\&in_reply_to_status_id=&/'`

    INPUTMINUSFLAGS=`echo $* | sed 's/ -.=[^ ]*\b//g'`
    I="$INPUTMINUSFLAGS"
    MEDIA=`echo "$I"       | #
           rev             | #
           cut -d " " -f 1 | #
           rev`  
    if [ `echo $MEDIA               | #
          egrep ".jpg$|.png$|.gif$" | #
          wc -l` -gt 0 ]; then

    MEDIAIDS=`$TWURL -H upload.twitter.com \
             "/1.1/media/upload.json"       \
              -f $MEDIA -F media -X POST  | #
              sed 's/,/\n/g'              | #
              grep "media_id_string"      | #
              cut -d ":" -f 2 | cut -d "\"" -f 2`

          TEXT=`echo "$I"        | #
                rev              | #
                cut -d " " -f 2- | #
                rev              | #
                sed 's/&/+/g'`     # PREVENT ERROR (SUPERHACK!!)

          if [ `echo "$I"      | #
                sed 's/ /\n/g' | #
                wc -l` -gt 1   ]; then
                OPTIONS="media_ids=${MEDIAIDS}&status=${TEXT}"
          else
                OPTIONS="media_ids=${MEDIAIDS}"
          fi
    else
          TEXT=`echo "$I"        | #
                sed 's/&/+/g'`     # PREVENT ERROR (SUPERHACK!!)
          OPTIONS="status=${TEXT}"
    fi

    TWEET=`$TWURL \"$UPDATE\" -r \"$OPTIONS${ISREPLY}\"`

    if [ `echo $TWEET | grep '"errors":' | wc -l` -gt 0 ]
     then
          echo "There was an error. Deleting ${MEDIA%%.*}"
          echo $TWEET
        # rm ${MEDIA%%.*}.*
          echo "$TWURL \"$UPDATE\" -d \"$OPTIONS\""
          export TWTRPRT="error"
    else

    STATUSID=`echo $TWEET       | #
              sed 's/","/\n/g'  | #
              sed 's/id/\nid/g' | #
              grep '^id":'      | #
              head -n 1         | #
              sed 's/[^0-9]*//g'` # RM ALL BUT NUMBERS
    fi

  }
# --------------------------------------------------------------------------- #
  function getMentions() {

  $TWURL /1.1/statuses/mentions_timeline.json > ${TMP}.timeline

 ( IFS=$'\n'
   for MENTION in `sed 's/{"created_at/\nXXXXXXX/g' ${TMP}.timeline |#
                   grep "^XXXXXXX"`
    do
      MENTIONTXT=`echo $MENTION    | #
                  sed 's/","/\n/g' | #
                  grep '^text"'    | #
                  sed 's/^text":"//'`
      MENTIONID=`echo $MENTION     | #
                 sed 's/","/\n/g'  | #
                 sed 's/id/\nid/g' | #
                 grep '^id":'      | #
                 head -n 1         | #
                 sed 's/[^0-9]*//g'` # RM ALL BUT NUMBERS
      MENTIONFROM=`echo $MENTION            | #
                   sed 's/","/\n/g'         | #
                   grep '^screen_name"'     | #
                   sed 's/^screen_name":"//'` #
      echo ""
      echo "-${MENTIONID}-----------------"
      echo  $MENTIONTXT
      echo  $MENTIONID
      echo  $MENTIONFROM
      echo "--------------------------------------"
      echo ""

  done )

  rm ${TMP}.timeline
 

 }
# --------------------------------------------------------------------------- #

